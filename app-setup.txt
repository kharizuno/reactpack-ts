SETUP REACT
- npm init
- npm install express cors cross-env dotenv
- npm install fs morgan rotating-file-stream
- npm install axios crypto-js memory-cache

- replace to scripts in package.json 
    "start": "node server.js",
    "start:staging": "cross-env NODE_ENV=staging npm run start",
    "start:production": "cross-env NODE_ENV=production npm run start",
    "server": "nodemon server.js",
    "server:staging": "cross-env NODE_ENV=staging npm run server",
    "server:production": "cross-env NODE_ENV=production npm run server",
    "client-dev": "npm run build:staging --prefix client",
    "client-live": "npm run start:production --prefix client",
    "dev": "concurrently \"npm run server:staging\" \"npm run client-dev\"",
    "live": "concurrently \"npm run server:production\" \"npm run client-live\""
    
- create file "server.js"
	- load all npm
	- dotenv.config({
			path: path.resolve(__dirname, 'client/config/.env.' + process.env.NODE_ENV)
		})
	- app.use(cors())
	- app.use(express.static('public'))
	- app.get('*', (req, res) => {
			res.sendFile(path.resolve(__dirname, 'public', 'index.html'))
		})
	- const PORT = process.env.PORT || 5000
	- app.listen(PORT, () => console.log(`Server started on port ${PORT}`))
	
- npx create-react-app your-app --template typescript
- rename folder your-app to become client

- create new folder in folder "src"
	- api
	- assets
		- css
		- images
	- components
	- constants
	- helpers	
	- redux
		- actions
		- reducers
	- router
		- route
		- utils
	- store
	- utils
	
- move file
	- app.js, app-test.js (folder components)
	- index.css, app.css, logo.svg (folder style)
	
- npm install env-cmd react-router-dom react-redux react-router-redux 
- npm install redux redux-thunk redux-promise-middleware
- mkdir config and create file .env.production / .env.staging

- replace to scripts in client/package.json
    "start": "env-cmd -f ./config/.env.${BUILD_ENV} react-scripts --openssl-legacy-provider start",
    "start:staging": "BUILD_ENV=staging npm run start",
    "start:production": "BUILD_ENV=production npm run start",
    "build": "GENERATE_SOURCEMAP=false env-cmd -f ./config/.env.${BUILD_ENV} react-scripts --openssl-legacy-provider build && rm -rf ../public && mv build ../public",
    "build:staging": "BUILD_ENV=staging npm run build",
    "build:production": "BUILD_ENV=production npm run build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
    
- create file index.js in folder store
- create file index.js in folder redux/reducers
- edit file src/index.js
	- import {Provider} from 'react-redux';
	- import store from './store';
	- replace ReactDOM.render with:
		<Provider store={store}>
           	 	<App />
  		</Provider>

- create and setup file index.js in folder router

- npm install validator striptags stripchar crypto-js serialize-javascript
- nom install axios moment moment-timezone

- npm install antd (optional)
- npm install @mui/icons-material @mui/material @emotion/styled @emotion/react
- npm install @fortawesome/react-fontawesome @fortawesome/free-solid-svg-icons @fortawesome/free-regular-svg-icons @fortawesome/fontawesome-svg-core

- setup code api/index.js (requestHeaders, requestUrl, callGet, Post, Put, Delete)
- setup code helpers/index.js
